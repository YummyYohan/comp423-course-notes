{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Yohan's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/rust-setup/","title":"Setting up a dev container for Rust","text":"<ul> <li> <p>Primary author: Yohan Choi</p> </li> <li> <p>Reviewer: Nabiha Choudhury</p> </li> </ul>"},{"location":"tutorials/rust-setup/#prerequisites","title":"Prerequisites:","text":"<ol> <li> <p>GitHub account: If you dont have a GitHub account, sign up at GitHub.</p> </li> <li> <p>Git installed: Make sure to install Git if you haven't already.</p> </li> <li> <p>Visual Studio Code (VS Code): Downloads code here</p> </li> </ol>"},{"location":"tutorials/rust-setup/#part-1-project-setup-creating-the-repository","title":"Part 1. Project Setup: Creating the Repository","text":""},{"location":"tutorials/rust-setup/#step-1-create-a-local-directory-and-initialize-git","title":"Step 1. Create a Local Directory and Initialize Git","text":"<p>(A) Open up your terminal or command prompt.</p> <p>(B) Create a new directory</p> <pre><code>mkdir rust-tutorial\ncd rust-tutorial\n</code></pre> <p>(C) Initialize a new Git repository:</p> <pre><code>git init\n</code></pre> <p>(D) Create a README file:</p> <pre><code>echo \"# Rust Tutorial\" &gt; README.md\ngit add README.md\ngit commit -m \"Initial commit with README\"\n</code></pre>"},{"location":"tutorials/rust-setup/#step-2-create-a-remote-repository-on-github","title":"Step 2. Create a Remote Repository on GitHub","text":"<p>(1) Log in to your GitHub and go to Create a New Repository page.</p> <p>(2) Fill in the following details:</p> <ul> <li>Repository Name: rust-tutorial</li> <li>Desscription: \"Tutorial for setting up a basic project for Rust programming language</li> <li>Visibility: Public</li> </ul> <p>Warning</p> <p>For this tutorial, do not initialize the repository with a README, .gitignore, or license.</p> <p>(3) Create Repository</p>"},{"location":"tutorials/rust-setup/#step-3-linking-your-local-repository-to-github","title":"Step 3. Linking your Local Repository to GitHub","text":"<p>(1) Add the GitHub repository as a remote by:</p> <pre><code>git remote add origin https://github.com/&lt;your-username&gt;/rust-tutorial.git\n</code></pre> <p>Replace <code>&lt;your-username&gt;</code> with your GitHub username.</p> <p>(2) Check your default branch name with the subcommand <code>git branch</code>. If the branch is not starred <code>main</code>, rename it to <code>main</code> with the following command: <code>git branch -M main</code>.</p> <p>Info</p> <p>Old versions of <code>git</code> choose the name <code>master</code> for the primary branch, but these days <code>main</code> is the standard primary branch name.</p> <p>(3) Push your local commits to the GitHub repository:</p> <pre><code>git push --set-upstream origin main\n</code></pre> <p>(4) In your web browser, refresh your GitHub repository and check that the same commit you made locally has now been pushed to remote. You can also use the <code>git log</code> locally to see the commit ID and message and check if the ID matches with the most recent commit on GitHub.</p>"},{"location":"tutorials/rust-setup/#part-2-setting-up-the-development-environment","title":"Part 2. Setting Up the Development Environment","text":""},{"location":"tutorials/rust-setup/#step-1-add-development-container-configuration","title":"Step 1. Add Development Container Configuration","text":"<p>(1) In your <code>rust-tutorial</code> directory, create a folder named <code>.devcontainer</code>.</p> <pre><code>mkdir .devcontainer\n</code></pre> <p>(2) Now, in your <code>.devcontainer</code> folder, create a <code>devcontainer.json</code> file with the following content:</p> <pre><code>{\n    \"name\": \"Rust Development Container\",\n    \"image\": \"mcr.microsoft.com/vscode/devcontainers/rust:latest\",\n    \"customizations\": {\n        \"vscode\": {\n            \"settings\": {},\n            \"extensions\": [\"rust-lang.rust-analyzer\"]\n        }\n    },\n    \"postCreateCommand\": \"rustup update &amp;&amp; rustup default stable\"\n}\n</code></pre>"},{"location":"tutorials/rust-setup/#step-2-open-the-folder-in-dev-container","title":"Step 2: Open the Folder in Dev Container","text":"<p>(1) Open VSCode and install the Dev Containers extension for VScode.</p> <p>(2) Press <code>Ctrl+Shift+P</code> (or <code>Cmd+Shift+P</code> on Mac),find and select \"Dev Containers: Reopen in Container\". This may take a few minutes while the image and requirements are being installed.</p> <p>(3) After your dev container setup completes, close the current terminal, open a new terminal within VSCode, and run <code>rustc --version</code> to check if your dev container is running a recent version of Rust</p>"},{"location":"tutorials/rust-setup/#step-3-creating-a-new-rust-project","title":"Step 3: Creating a New Rust Project","text":"<p>(1) Run the following command to create a new Rust project:</p> <pre><code>cargo new hello-comp423 --vcs none\n</code></pre> <p>Info</p> <p><code>--vcs none</code> flag is used in order to NOT create a Git repository, which it does automatically with <code>cargo new</code></p> <p>(2) Navigate to the directory we just created</p> <pre><code>cd hello-comp423\n</code></pre>"},{"location":"tutorials/rust-setup/#step-4-writing-hello-comp423-program","title":"Step 4: Writing \"Hello COMP423\" Program","text":"<p>(1) Open <code>src/main.rs</code> file.</p> <p>(2) Replace its contents with:</p> <pre><code>fn main() {\n    println!(\"Hello COMP423\")\n}\n</code></pre> <p>(3) Compile the program using the following command:</p> <pre><code>cargo build\n</code></pre> <p>This will compile and generate an executable in the <code>target/debug</code> directory. </p> <p>(4) Run the program:</p> <pre><code>cargo run\n</code></pre> <p>You should see an output:</p> <pre><code>Hello COMP423\n</code></pre> <p>Note</p> <p><code>cargo build</code> compiles the project but does not run it, where as <code>cargo run</code> automatically compiles and runs the program.</p>"}]}